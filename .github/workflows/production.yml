name: development

on:
  push:
    branches:
      - 'release/**'

env:
  DOTNET_VERSION: '8.x'
  NUGET_PACKAGES: ${{ github.workspace }}/.nuget/packages

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
          cache: true
          cache-dependency-path: '**/packages.lock.json'
      - run: |
          dotnet restore --use-lock-file --locked-mode
      - run: |
          dotnet build --configuration Release --no-restore
      - run: |
          dotnet test --logger trx --results-directory dotnet-test-results
      - uses: actions/upload-artifact@v4
        with:
            name: dotnet-test-results
            path: dotnet-test-results
            retention-days: 7

  build-and-run-docker-image:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup SSH
        run: |
          # Setup SSH
          mkdir -p ~/.ssh
          echo "${{ secrets.PRODUCTION_SSH_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          ssh-keyscan -H ${{ secrets.PRODUCTION_SSH_HOST }} >> ~/.ssh/known_hosts

      - name: Build and Push Docker image
        run: |
          # Build and Push Docker image
          VERSION_NUMBER=$(echo $GITHUB_REF_NAME | cut -d'/' -f2)
          docker build --platform linux/amd64 --tag ${{ github.repository }}:latest --tag ${{ github.repository }}:$VERSION_NUMBER .
          docker save ${{ github.repository }} | bzip2 | ssh ${{ secrets.PRODUCTION_SSH_USER }}@${{ secrets.PRODUCTION_SSH_HOST }} docker load

      - name: Run Docker image
        run: |
          # Run Docker image
          DOCKER_CONTAINER_NAME=$(echo $GITHUB_REPOSITORY | cut -d'/' -f2)
          ssh ${{ secrets.PRODUCTION_SSH_USER }}@${{ secrets.PRODUCTION_SSH_HOST }} << EOF
          docker stop $DOCKER_CONTAINER_NAME
          docker rm $DOCKER_CONTAINER_NAME
          docker run --detach \
          --name $DOCKER_CONTAINER_NAME \
          --network traefik-network \
          --volume ${DOCKER_CONTAINER_NAME}-data:/app/data \
          --env ASPNETCORE_ENVIRONMENT=Production \
          --env ASPNETCORE_HTTP_PORTS=${{ secrets.PRODUCTION_APP_PORT }} \
          --env BasicAuthenticationSettings__UserName=${{ secrets.PRODUCTION_APP_AUTH_USER }} \
          --env BasicAuthenticationSettings__Password=${{ secrets.PRODUCTION_APP_AUTH_PASSWORD }} \
          --restart unless-stopped \
          ${{ github.repository }}
          EOF